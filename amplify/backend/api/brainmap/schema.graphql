type Topic @model @auth(rules: [{allow: owner}]) {
    id: ID!
    name: String!
    description: String
    bucket: String
    nolinks: Int
    shirtsize: Int
    color: String
    toLinks: [Link] @connection(name: "toConnector")
    fromLinks: [Link] @connection(name: "fromConnector")
    tags: [TagHelper] @connection(keyName: "byTopic", fields: ["id"])
}

type Link @model @auth(rules: [{allow: owner}]){
    id: ID!
    to: String!
    from: String!
    toTopic: Topic! @connection(name: "toConnector")
    fromTopic: Topic! @connection(name: "fromConnector")
    title: String!
    color: String
}

type TagHelper
@model(queries: null)
@key(name: "byTopic", fields: ["topicID", "helperID"])
@key(name: "byHelper", fields: ["helperID", "topicID"])
@auth(rules: [{allow: owner}]){
    id: ID!
    topicID: ID!
    helperID: ID!
    topic: Topic! @connection(fields: ["topicID"])
    helper: Tag! @connection(fields: ["helperID"])
}

type Tag @model @auth(rules: [{allow: owner}]){
    id: ID!
    name: String!
    topics: [TagHelper] @connection(keyName: "byHelper", fields: ["id"])
}

# post is topic and user is tag
# Getting user with post seems easy
